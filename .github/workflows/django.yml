name: Django CI

on:
  pull_request:
    branches: [ "main" ]

jobs:
  checks:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run Flake8
      run: |
        flake8 .

  build:
  
    runs-on: ubuntu-latest
    needs: checks

    env:
      ENV_FILE: ${{ secrets.ENV_FILE }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up .env file
        run: echo "$ENV_FILE" > .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Convert entrypoint.sh to Unix format
        run: sed -i 's/\r$//' entrypoint.sh

      - name: Start Docker Containers
        run: docker compose up -d --build

      - name: Wait for services to be ready
        run: |
          sleep 10

      - name: Check running containers
        run: docker ps

      - name: Run health check
        run: curl -f http://localhost || (docker compose logs && exit 1)

  tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3
    
      - name: Run Pytest inside container
        run: docker compose exec -T app pytest -v || (docker compose logs app && exit 1)

  cleanup:
    name: Cleanup and Stop Containers
    runs-on: ubuntu-latest
    needs: [tests, build] 
    if: always()

    env:
      ENV_FILE: ${{ secrets.ENV_FILE }}

    steps:
      - uses: actions/checkout@v3

      - name: Stop and Remove Containers
        run: docker compose down -v
